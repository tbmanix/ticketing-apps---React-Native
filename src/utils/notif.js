import PushNotification from 'react-native-push-notification';

class Notification {
  constructor() {
    PushNotification.createChannel(
      {
        channelId: 'reminder-product', // (required)
        channelName: 'Reminder Product', // (required)
        channelDescription: 'A channel to categorise your notifications', // (optional) default: undefined.
        // playSound: false, // (optional) default: true
        // soundName: 'default', // (optional) See `soundName` parameter of `localNotification` function
        // importance: Importance.HIGH, // (optional) default: Importance.HIGH. Int value of the Android notification importance
        // vibrate: true, // (optional) default: true. Creates the default vibration pattern if true.
      },
      created => console.log(`createChannel returned '${created}'`), // (optional) callback returns whether the channel was created, false means it already existed.
    );
    PushNotification.createChannel(
      {
        channelId: 'new-product', // (required)
        channelName: 'New Product', // (required)
        channelDescription: 'A channel to categorise your notifications', // (optional) default: undefined.
        // playSound: false, // (optional) default: true
        // soundName: 'default', // (optional) See `soundName` parameter of `localNotification` function
        // importance: Importance.HIGH, // (optional) default: Importance.HIGH. Int value of the Android notification importance
        // vibrate: true, // (optional) default: true. Creates the default vibration pattern if true.
      },
      created => console.log(`createChannel returned '${created}'`), // (optional) callback returns whether the channel was created, false means it already existed.
    );
  }

  reminderProductNotification() {
    PushNotification.localNotification({
      /* iOS and Android properties */
      //   id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      channelId: 'reminder-product',
      title: 'My Notification Title', // (optional)
      message: 'My Notification Message', // (required)
      //   picture: 'https://www.example.tld/picture.jpg', // (optional) Display an picture with the notification, alias of `bigPictureUrl` for Android. default: undefined
      //   userInfo: {}, // (optional) default: {} (using null throws a JSON value '<null>' error)
      //   playSound: false, // (optional) default: true
      //   soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
      //   number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
      //   repeatType: 'day', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
    });
  }
  scheduleProductNotification({title, message, date}) {
    PushNotification.localNotificationSchedule({
      /* iOS and Android properties */
      //   id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      channelId: 'reminder-product',
      title, // (optional)
      message, // (required)
      date,
    });
  }
}

export default new Notification();
